@page "/ThanhToans/edit"
@inject QuanLyPhongTro.Data.QuanLyPhongTroContext DB
@using QuanLyPhongTro
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Edit</PageTitle>

<h1>Edit</h1>

<h4>ThanhToan</h4>
<hr />
@if (ThanhToan is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm method="post" Model="ThanhToan" OnValidSubmit="UpdateThanhToan" FormName="edit" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary />
                <input type="hidden" name="ThanhToan.MaTT" value="@ThanhToan.MaTT" />
                <div class="mb-3">
                    <label for="maphongtro" class="form-label">MaChiTietThue:</label>
                    <InputText id="maphongtro" @bind-Value="ThanhToan.MaChiTietThue" class="form-control" />
                    <ValidationMessage For="() => ThanhToan.MaChiTietThue" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="ngaytratien" class="form-label">NgayTraTien:</label>
                    <InputDate id="ngaytratien" @bind-Value="ThanhToan.NgayTT" class="form-control" />
                    <ValidationMessage For="() => ThanhToan.NgayTT" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="sotien" class="form-label">SoTien:</label>
                    <InputNumber id="sotien" @bind-Value="ThanhToan.TongTien" class="form-control" />
                    <ValidationMessage For="() => ThanhToan.TongTien" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="phuongthuctt" class="form-label">PhuongThucTT:</label>
                    <InputText id="phuongthuctt" @bind-Value="ThanhToan.PhuongThucTT" class="form-control" />
                    <ValidationMessage For="() => ThanhToan.PhuongThucTT" class="text-danger" />
                </div>
                <button type="submit" class="btn btn-primary">Save</button>
            </EditForm>
        </div>
    </div>
}

<div>
    <a href="/thanhtoans">Back to List</a>
</div>

@code {
    [SupplyParameterFromQuery]
    public string mathanhtoan { get; set; }

    [SupplyParameterFromForm]
    public ThanhToan? ThanhToan { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ThanhToan ??= await DB.ThanhToan.FirstOrDefaultAsync(m => m.MaTT == mathanhtoan);

        if (ThanhToan is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    // To protect from overposting attacks, enable the specific properties you want to bind to.
    // For more details, see https://aka.ms/RazorPagesCRUD.
    public async Task UpdateThanhToan()
    {
        DB.Attach(ThanhToan!).State = EntityState.Modified;

        try
        {
            await DB.SaveChangesAsync();
        }
        catch (DbUpdateConcurrencyException)
        {
            if (!ThanhToanExists(ThanhToan!.MaTT))
            {
                NavigationManager.NavigateTo("notfound");
            }
            else
            {
                throw;
            }
        }

        NavigationManager.NavigateTo("/thanhtoans");
    }

    bool ThanhToanExists(string mathanhtoan)
    {
        return DB.ThanhToan.Any(e => e.MaTT == mathanhtoan);
    }
}
