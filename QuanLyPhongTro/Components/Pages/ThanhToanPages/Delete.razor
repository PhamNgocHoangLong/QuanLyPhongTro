@page "/thanhtoans/delete"
@inject QuanLyPhongTro.Data.QuanLyPhongTroContext DB
@using QuanLyPhongTro
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>ThanhToan</h4>
    <hr />
    @if (thanhtoan is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">MaPhongTro</dt>
            <dd class="col-sm-10">@thanhtoan.MaPhongTro</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">NgayTraTien</dt>
            <dd class="col-sm-10">@thanhtoan.NgayTraTien</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SoTien</dt>
            <dd class="col-sm-10">@thanhtoan.SoTien</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">PhuongThucTT</dt>
            <dd class="col-sm-10">@thanhtoan.PhuongThucTT</dd>
        </dl>
        <EditForm method="post" Model="thanhtoan" OnValidSubmit="DeleteThanhToan" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(thanhtoan is null)">Delete</button> |
            <a href="/thanhtoans">Back to List</a>
        </EditForm>
    }
</div>

@code {
    ThanhToan? thanhtoan;

    [SupplyParameterFromQuery]
    public int MaThanhToan { get; set; }

    protected override async Task OnInitializedAsync()
    {
        thanhtoan = await DB.ThanhToan.FirstOrDefaultAsync(m => m.MaThanhToan == MaThanhToan);

        if (thanhtoan is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteThanhToan()
    {
        DB.ThanhToan.Remove(thanhtoan!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/thanhtoans");
    }
}
