@page "/danhgia/delete"
@inject QuanLyPhongTro.Data.QuanLyPhongTroContext DB
@using QuanLyPhongTro
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>DanhGia</h4>
    <hr />
    @if (danhgia is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">NgayDanhGia</dt>
            <dd class="col-sm-10">@danhgia.NgayDanhGia</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">NoiDung</dt>
            <dd class="col-sm-10">@danhgia.NoiDung</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">MaNguoiDanhGia</dt>
            <dd class="col-sm-10">@danhgia.MaNguoiDanhGia</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">MaPhongTro</dt>
            <dd class="col-sm-10">@danhgia.MaPhongTro</dd>
        </dl>
        <EditForm method="post" Model="danhgia" OnValidSubmit="DeleteDanhGia" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(danhgia is null)">Delete</button> |
            <a href="/danhgia">Back to List</a>
        </EditForm>
    }
</div>

@code {
    DanhGia? danhgia;

    [SupplyParameterFromQuery]
    public int MaDanhGia { get; set; }

    protected override async Task OnInitializedAsync()
    {
        danhgia = await DB.DanhGia.FirstOrDefaultAsync(m => m.MaDanhGia == MaDanhGia);

        if (danhgia is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteDanhGia()
    {
        DB.DanhGia.Remove(danhgia!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/danhgia");
    }
}
