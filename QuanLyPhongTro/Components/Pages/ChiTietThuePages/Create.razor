@page "/chitietthues/create"
@inject QuanLyPhongTro.Data.QuanLyPhongTroContext DB
@using Microsoft.EntityFrameworkCore
@using QuanLyPhongTro
@inject NavigationManager NavigationManager
@inject IServiceProvider ServiceProvider

@code
{
    private List<(string MaPhongTro, bool TrangThai)> phongTroList = new List<(string MaPhongTro, bool TrangThai)>();
    private List<string> maNguoiThueList = new List<string>();

    protected override async Task OnInitializedAsync()
    {
        using (var scope = ServiceProvider.CreateScope())
        {
            var DBContext = scope.ServiceProvider.GetRequiredService<QuanLyPhongTro.Data.QuanLyPhongTroContext>();

            maNguoiThueList = await DBContext.NguoiThue.Select(nguoi => nguoi.MaNgThue).ToListAsync();
            var phongTros = await DBContext.PhongTro.ToListAsync();

            foreach (var phongTro in phongTros)
            {
                phongTroList.Add((phongTro.MaPhongTro, phongTro.TrangThai));
            }
        }
    }
}

<PageTitle>Create</PageTitle>


<h1 class="text-danger-emphasis fw-bold text-center">Chi tiết thuê</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="ChiTietThue" OnValidSubmit="AddChiTietThue" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="machutro" class="form-label text-primary fw-medium">Mã phòng :</label>
                <InputSelect id="machutro" @bind-Value="ChiTietThue.MaPhong" class="form-control ">
                    @foreach (var item in phongTroList)
                    {
                        <option value="@item.MaPhongTro">@item.MaPhongTro</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => ChiTietThue.MaPhong" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="manguoithue" class="form-label text-primary fw-medium" >Mã người thuê :</label>
                <InputSelect id="manguoithue" @bind-Value="ChiTietThue.MaNgThue" class="form-control text-primary fw-medium">
                    @foreach (var item in maNguoiThueList)
                    {
                    <option value="@item">@item</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => ChiTietThue.MaNgThue" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="thoigianthue" class="form-label text-primary fw-medium">Thời gian thuê :</label>
                <InputDate id="thoigianthue" @bind-Value="ChiTietThue.ThoiGianThue" class="form-control" /> 
                <ValidationMessage For="() => ChiTietThue.ThoiGianThue" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="diachithue" class="form-label text-primary fw-medium">Địa chỉ thuê:</label>
                <InputText id="diachithue" @bind-Value="ChiTietThue.DiaChiThue" class="form-control" /> 
                <ValidationMessage For="() => ChiTietThue.DiaChiThue" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Tạo</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/chitietthues">Quay lại </a>
</div>

@code {

    [SupplyParameterFromForm]
    public ChiTietThue ChiTietThue { get; set; } = new() {ThoiGianThue = DateTime.Now};

    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddChiTietThue()
    {
        var lastChiTietThue = await DB.ChiTietThue.OrderByDescending(p => p.MaChiTietThue).FirstOrDefaultAsync();
        if (lastChiTietThue == null)
        {
            ChiTietThue.MaChiTietThue = "CT1";
        }
        else
        {
            var lastNumber = int.Parse(lastChiTietThue.MaChiTietThue.Substring(2));
            ChiTietThue.MaChiTietThue = "CT" + (lastNumber + 1).ToString();
        }
        DB.ChiTietThue.Add(ChiTietThue);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/chitietthues");
    }
}
