@page "/ChiTietThues/edit"
@inject QuanLyPhongTro.Data.QuanLyPhongTroContext DB
@using QuanLyPhongTro
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore
@inject IServiceProvider ServiceProvider

<PageTitle>Sửa chi tiết thuê</PageTitle>

<h1 class="text-center">Sửa chi tiết thuê</h1>

<hr />
@if (ChiTietThue is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-4">
            <EditForm method="post" Model="ChiTietThue" OnValidSubmit="UpdateChiTietThue" FormName="edit" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary />
                <input type="hidden" name="ChiTietThue.MaChiTietThue" value="@ChiTietThue.MaChiTietThue" />
                <div class="mb-3">
                    <label for="machutro" class="form-label text-primary">Mã phòng trọ:</label>
                    <InputSelect id="machutro" @bind-Value="ChiTietThue.MaPhong" class="form-control">
                        @foreach (var item in phongTroList)
                        {
                            <option value="@item.MaPhongTro">@item.MaPhongTro</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="() => ChiTietThue.MaPhong" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="manguoithue" class="form-label text-primary">Mã người thuê:</label>
                    <InputText id="manguoithue" @bind-Value="ChiTietThue.MaNgThue" class="form-control" />
                    <ValidationMessage For="() => ChiTietThue.MaNgThue" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="thoigianthue" class="form-label text-primary">Thời gian thuê:</label>
                    <InputDate id="thoigianthue" @bind-Value="ChiTietThue.ThoiGianThue" class="form-control" />
                    <ValidationMessage For="() => ChiTietThue.ThoiGianThue" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="diachithue" class="form-label text-primary">Địa chỉ thuê:</label>
                    <InputText id="diachithue" @bind-Value="ChiTietThue.DiaChiThue" class="form-control" />
                    <ValidationMessage For="() => ChiTietThue.DiaChiThue" class="text-danger" />
                </div>
                <button type="submit" class="btn btn-primary">Lưu</button>
                <a href="/chitietthues" class="btn btn-primary">Quay lại </a>
            </EditForm>
        </div>
    </div>
}

<div>
    
</div>

@code {
    [SupplyParameterFromQuery]
    public string MaChiTietThue { get; set; }
    private List<(string MaPhongTro, bool TrangThai)> phongTroList = new List<(string MaPhongTro, bool TrangThai)>();

    [SupplyParameterFromForm]
    public ChiTietThue? ChiTietThue { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var scope = ServiceProvider.CreateScope();
        var DBContext1 = scope.ServiceProvider.GetRequiredService<QuanLyPhongTro.Data.QuanLyPhongTroContext>();
        var phongTrosTask = DBContext1.PhongTro.ToListAsync();

        var scope2 = ServiceProvider.CreateScope();
        var DBContext2 = scope2.ServiceProvider.GetRequiredService<QuanLyPhongTro.Data.QuanLyPhongTroContext>();
        var chiTietThueTask = DBContext2.ChiTietThue.FirstOrDefaultAsync(m => m.MaChiTietThue == MaChiTietThue);

        await Task.WhenAll(phongTrosTask, chiTietThueTask);

        foreach (var phongTro in phongTrosTask.Result)
        {
            phongTroList.Add((phongTro.MaPhongTro, phongTro.TrangThai));
        }
        ChiTietThue ??= chiTietThueTask.Result;

        if (ChiTietThue is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    // To protect from overposting attacks, enable the specific properties you want to bind to.
    // For more details, see https://aka.ms/RazorPagesCRUD.
    public async Task UpdateChiTietThue()
    {
        DB.Attach(ChiTietThue!).State = EntityState.Modified;

        try
        {
            await DB.SaveChangesAsync();
        }
        catch (DbUpdateConcurrencyException)
        {
            if (!ChiTietThueExists(ChiTietThue!.MaChiTietThue))
            {
                NavigationManager.NavigateTo("notfound");
            }
            else
            {
                throw;
            }
        }

        NavigationManager.NavigateTo("/chitietthues");
    }

    bool ChiTietThueExists(string machitietthue)
    {
        return DB.ChiTietThue.Any(e => e.MaChiTietThue == machitietthue);
    }
}
