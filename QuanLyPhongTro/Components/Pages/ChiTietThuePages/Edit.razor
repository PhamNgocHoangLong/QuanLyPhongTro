@page "/ChiTietThues/edit"
@inject QuanLyPhongTro.Data.QuanLyPhongTroContext DB
@using QuanLyPhongTro
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Sửa chi tiết thuê</PageTitle>

<h1 class="text-danger-emphasis fw-bold text-center">Sửa chi tiết thuê</h1>
<hr />
@if (ChiTietThue is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-12">
            <EditForm method="post" Model="ChiTietThue" OnValidSubmit="UpdateChiTietThue" FormName="edit" Enhance>
                <DataAnnotationsValidator />
                <ValidationSummary />
                <input type="hidden" name="ChiTietThue.MaChiTietThue" value="@ChiTietThue.MaChiTietThue" />
                <div class="mb-3">
                    <label for="machutro" class="form-label text-primary fw-medium">Mã chủ trọ</label>
                    <InputNumber id="machutro" @bind-Value="ChiTietThue.MaChuTro" class="form-control" />
                    <ValidationMessage For="() => ChiTietThue.MaChuTro" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="manguoithue" class="form-label text-primary fw-medium">Mã người thuê</label>
                    <InputNumber id="manguoithue" @bind-Value="ChiTietThue.MaNguoiThue" class="form-control" />
                    <ValidationMessage For="() => ChiTietThue.MaNguoiThue" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="thoigianthue" class="form-label text-primary fw-medium">Ngày thuê</label>
                    <InputDate id="thoigianthue" @bind-Value="ChiTietThue.ThoiGianThue" class="form-control" />
                    <ValidationMessage For="() => ChiTietThue.ThoiGianThue" class="text-danger" />
                </div>
                <div class="mb-3">
                    <label for="diachithue" class="form-label text-primary fw-medium">Địa chỉ thuê</label>
                    <InputText id="diachithue" @bind-Value="ChiTietThue.DiaChiThue" class="form-control" />
                    <ValidationMessage For="() => ChiTietThue.DiaChiThue" class="text-danger" />
                </div>
                <div>
                    <button type="submit" class="btn btn-primary px-4 my-3 me-3">Lưu</button>
                    <a href="/chitietthues" class="text-decoration-none">Quay lại</a>
                </div>
             
            </EditForm>
        </div>
    </div>
}



@code {
    [SupplyParameterFromQuery]
    public int MaChiTietThue { get; set; }

    [SupplyParameterFromForm]
    public ChiTietThue? ChiTietThue { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ChiTietThue ??= await DB.ChiTietThue.FirstOrDefaultAsync(m => m.MaChiTietThue == MaChiTietThue);

        if (ChiTietThue is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    // To protect from overposting attacks, enable the specific properties you want to bind to.
    // For more details, see https://aka.ms/RazorPagesCRUD.
    public async Task UpdateChiTietThue()
    {
        DB.Attach(ChiTietThue!).State = EntityState.Modified;

        try
        {
            await DB.SaveChangesAsync();
        }
        catch (DbUpdateConcurrencyException)
        {
            if (!ChiTietThueExists(ChiTietThue!.MaChiTietThue))
            {
                NavigationManager.NavigateTo("notfound");
            }
            else
            {
                throw;
            }
        }

        NavigationManager.NavigateTo("/chitietthues");
    }

    bool ChiTietThueExists(int machitietthue)
    {
        return DB.ChiTietThue.Any(e => e.MaChiTietThue == machitietthue);
    }
}
