@page "/chitietthues/delete"
@inject QuanLyPhongTro.Data.QuanLyPhongTroContext DB
@using QuanLyPhongTro
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>ChiTietThue</h4>
    <hr />
    @if (chitietthue is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">MaChuTro</dt>
            <dd class="col-sm-10">@chitietthue.MaChuTro</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">MaNguoiThue</dt>
            <dd class="col-sm-10">@chitietthue.MaNguoiThue</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ThoiGianThue</dt>
            <dd class="col-sm-10">@chitietthue.ThoiGianThue</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DiaChiThue</dt>
            <dd class="col-sm-10">@chitietthue.DiaChiThue</dd>
        </dl>
        <EditForm method="post" Model="chitietthue" OnValidSubmit="DeleteChiTietThue" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(chitietthue is null)">Delete</button> |
            <a href="/chitietthues">Back to List</a>
        </EditForm>
    }
</div>

@code {
    ChiTietThue? chitietthue;

    [SupplyParameterFromQuery]
    public int MaChiTietThue { get; set; }

    protected override async Task OnInitializedAsync()
    {
        chitietthue = await DB.ChiTietThue.FirstOrDefaultAsync(m => m.MaChiTietThue == MaChiTietThue);

        if (chitietthue is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteChiTietThue()
    {
        DB.ChiTietThue.Remove(chitietthue!);
        await DB.SaveChangesAsync();
        NavigationManager.NavigateTo("/chitietthues");
    }
}
